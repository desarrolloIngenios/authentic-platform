# Deployment para el frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clinical-records-frontend
  namespace: clinical-records
  labels:
    app: clinical-records-frontend
    component: ui
    tier: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: clinical-records-frontend
  template:
    metadata:
      labels:
        app: clinical-records-frontend
        component: ui
        tier: frontend
    spec:
      serviceAccountName: clinical-records-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: frontend
        image: gcr.io/your-project-id/clinical-records-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: clinical-records-config
              key: TZ
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-tmp
          mountPath: /tmp
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Service para el frontend
apiVersion: v1
kind: Service
metadata:
  name: clinical-records-frontend
  namespace: clinical-records
  labels:
    app: clinical-records-frontend
    component: ui
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: clinical-records-frontend
---
# HorizontalPodAutoscaler para el frontend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: clinical-records-frontend-hpa
  namespace: clinical-records
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: clinical-records-frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80